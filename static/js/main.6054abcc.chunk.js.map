{"version":3,"sources":["components/siteContext.jsx","components/navbar.jsx","components/postSection.jsx","pages/blog.jsx","components/projectSection.jsx","pages/projects.jsx","components/CodeBlock.js","components/markdownSection.jsx","pages/home.jsx","components/musicPlayer/musicPlayer.jsx","MobileApp.js","components/languageSelector.jsx","components/sidebar.jsx","App.js","WebApp.js","serviceWorker.js","index.js"],"names":["globalContext","React","createContext","GlobalContextProvider","children","useState","context","lang","get","set","Provider","value","Navbar","props","handleItemClick","e","name","setState","activeItem","itemName","window","location","pathname","substr","charAt","toUpperCase","slice","state","language","this","url","Home","Blog","Projects","navLabels","labels","font","Segment","id","style","padding","width","borderRadius","position","zIndex","Menu","pointing","secondary","fontFamily","fontSize","Item","as","Link","to","Image","src","height","Object","keys","map","key","active","onClick","Dropdown","item","text","en","cn","handleLanguageSelection","Flag","Component","contextType","PostSection","getItemContainer","elem","nodeName","parentNode","title","date","tags","imagePath","className","onMouseEnter","target","boxShadow","onMouseLeave","maxDeviceWidth","minDeviceWidth","backgroundImage","margin","marginLeft","border","Content","Header","marginBottom","dangerouslySetInnerHTML","__html","Description","color","undefined","tag","Label","pageTitle","posts","postData","Container","Group","divided","post","image","ProjectSection","buttonText","buttonIcon","description","link","isDocument","startsWith","Card","extra","align","Button","href","Icon","itemsPerRow","projectData","project","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","typescript","css","coy","PureComponent","defaultProps","flatten","child","Children","toArray","reduce","HeadingRenderer","createElement","level","MarkdownSection","markdownText","filePath","fetch","then","response","loadMarkdown","escapeHtml","source","renderers","code","heading","bioPath","MusicPlayer","defaultVolume","handlePlaylistClick","titleProps","index","newIndex","activeIndex","handleMusicPlayerAccordionClick","showPlayer","getNextSong","currentSong","playlist","length","getPrevSong","isPlaying","progress","volume","registeredEvents","currentlyPlaying","currentVolume","savedVolume","player","refs","pause","play","temp","nextSong","evt","progressBar","ReactDOM","findDOMNode","songProgress","percentage","clientX","getBoundingClientRect","left","clientWidth","currentTime","duration","menu","document","getElementById","bottom","clientHeight","display","volumeSlider","volumeButton","muted","err","console","log","path","addEventListener","Fragment","ref","onEnded","playNextSong","bind","vertical","borderless","size","song","isSelected","selectSong","artist","selected","Slider","orientation","aria-labelledby","step","marks","min","max","marginTop","valueLabelDisplay","onChange","val","Grid","Row","centered","Column","icon","playPreviousSong","togglePlay","textAlign","top","columns","paddingBottom","readableDuration","Progress","percent","setProgress","paddingLeft","slider","Accordion","styled","Title","paddingTop","raised","Popup","content","trigger","toggleMute","SongSelectionItem","handleMouseEnter","handleMouseLeave","Dimmer","Dimmable","dimmed","seconds","sec","Math","floor","isNaN","MobileApp","contextRef","createRef","exact","component","LanguageSelector","ToggleButtonGroup","exclusive","aria-label","ToggleButton","NavigationMenu","verticalAlign","marginRight","fluid","tabular","attached","App","Ref","innerRef","Rail","internal","Sticky","stretched","overflow","WebApp","Boolean","hostname","match","figlet","parseFont","standard","_","data","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6054abcc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const globalContext = React.createContext({});\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const [language, setLanguage] = React.useState(\"en\");\r\n\r\n  const context = {\r\n    lang: {\r\n      get: language,\r\n      set: setLanguage,\r\n    },\r\n  };\r\n  return (\r\n    <globalContext.Provider value={context}>{children}</globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport labels from \"../data/labels\";\r\nimport { Image, Menu, Segment, Dropdown, Flag } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let itemName = window.location.pathname.substr(13);\r\n    itemName =\r\n      itemName === \"\"\r\n        ? \"Home\"\r\n        : itemName.charAt(0).toUpperCase() + itemName.slice(1);\r\n    this.state = { activeItem: itemName };\r\n  }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  handleLanguageSelection(language) {\r\n    if (language !== null) {\r\n      this.context.lang.set(language);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const url = {\r\n      Home: \"/siyuans-hub/\",\r\n      Blog: \"/siyuans-hub/blog\",\r\n      Projects: \"/siyuans-hub/projects\",\r\n    };\r\n    const langMenu = {\r\n      en: \"Language\",\r\n      cn: \"语言\",\r\n    };\r\n    const lang = this.context.lang.get;\r\n    const navLabels = labels[lang][\"navigation\"];\r\n    const { activeItem } = this.state;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n\r\n    return (\r\n      <Segment\r\n        id=\"navbar\"\r\n        style={{\r\n          padding: \"0.5em\",\r\n          width: \"100%\",\r\n          borderRadius: 0,\r\n          position: \"fixed\",\r\n          zIndex: \"1000\",\r\n        }}\r\n      >\r\n        <Menu\r\n          pointing\r\n          secondary\r\n          position=\"top\"\r\n          style={{ fontFamily: font, fontSize: \"11px\" }}\r\n        >\r\n          <Menu.Item as={Link} to=\"/siyuans-hub/\" style={{ padding: \"0.5em\" }}>\r\n            <Image\r\n              src=\"/siyuans-hub/favicon/favicon-16x16.png\"\r\n              style={{ width: \"20px\", height: \"20px\" }}\r\n            />\r\n          </Menu.Item>\r\n          {Object.keys(navLabels).map((key) => {\r\n            return (\r\n              <Menu.Item\r\n                key={navLabels[key]}\r\n                id={key}\r\n                name={navLabels[key]}\r\n                as={Link}\r\n                to={url[key]}\r\n                active={activeItem === key}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n          <Dropdown item text={langMenu[lang]} style={{ fontFamily: font }}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => this.handleLanguageSelection(\"en\")}>\r\n                <Flag name=\"gb\" /> EN\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => this.handleLanguageSelection(\"cn\")}>\r\n                <Flag name=\"cn\" /> CN\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\nNavbar.contextType = globalContext;\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Image, Segment, Label, Item } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nclass PostSection extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      title: props.title,\r\n      date: props.date,\r\n      tags: props.tags,\r\n      font: props.font,\r\n      imagePath: props.imagePath,\r\n    };\r\n  }\r\n\r\n  getItemContainer = (elem) => {\r\n    return elem.nodeName === \"A\"\r\n      ? elem\r\n      : this.getItemContainer(elem.parentNode);\r\n  };\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n    return (\r\n      <Item\r\n        as={Link}\r\n        to={`/siyuans-hub/blog/${this.state.id}`}\r\n        className=\"post-section\"\r\n        style={{ fontFamily: font }}\r\n        onMouseEnter={(e) => {\r\n          const itemContainer = this.getItemContainer(e.target);\r\n          itemContainer.style.boxShadow =\r\n            \"0 2px 4px 0 rgba(34,36,38,.12), 0 2px 10px 0 rgba(34,36,38,.15)\";\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          const itemContainer = this.getItemContainer(e.target);\r\n          itemContainer.style.boxShadow = \"none\";\r\n        }}\r\n      >\r\n        <MediaQuery maxDeviceWidth={1224}>\r\n          <Image src={this.state.imagePath} />\r\n        </MediaQuery>\r\n        <MediaQuery minDeviceWidth={1224}>\r\n          <div\r\n            className=\"image\"\r\n            style={{ backgroundImage: `url(${this.state.imagePath})` }}\r\n          ></div>\r\n        </MediaQuery>\r\n\r\n        <Segment\r\n          style={{\r\n            margin: 0,\r\n            padding: 0,\r\n            marginLeft: \"1em\",\r\n            border: \"none\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          <Item.Content>\r\n            <Item.Header\r\n              style={{\r\n                fontSize: \"14px\",\r\n                fontFamily: font,\r\n                marginBottom: \"0.3em\",\r\n              }}\r\n              dangerouslySetInnerHTML={{ __html: this.state.title }}\r\n            ></Item.Header>\r\n            <Item.Description style={{ color: \"gray\", marginBottom: \"0.3em\" }}>\r\n              <span>{this.state.date}</span>\r\n            </Item.Description>\r\n            <Item.Content>\r\n              {this.state.tags !== undefined &&\r\n                this.state.tags.map((tag) => {\r\n                  return <Label key={tag}>{tag}</Label>;\r\n                })}\r\n            </Item.Content>\r\n          </Item.Content>\r\n        </Segment>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\n\r\nPostSection.contextType = globalContext;\r\nexport default PostSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport PostSection from \"../components/postSection\";\r\nimport { Container, Segment, Item } from \"semantic-ui-react\";\r\nimport postData from \"../data/post-data.json\";\r\n\r\nclass Blog extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Blog\", cn: \"博客\" };\r\n  render() {\r\n    const posts = postData; //.slice(0, 1);\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        <Segment>\r\n          <Container>\r\n            <Item.Group divided>\r\n              {posts.map((post) => {\r\n                return (\r\n                  <PostSection\r\n                    key={post.title[lang]}\r\n                    style={{ fontFamily: font }}\r\n                    id={post.id}\r\n                    title={post.title[lang]}\r\n                    date={post.date}\r\n                    tags={post.tags[lang]}\r\n                    imagePath={post.image}\r\n                    font={font}\r\n                  />\r\n                );\r\n              })}\r\n            </Item.Group>\r\n          </Container>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBlog.contextType = globalContext;\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass ProjectSection extends Component {\r\n  buttonText = {\r\n    en: [\"View Source Code\", \"View Document\"],\r\n    cn: [\"查看源代码\", \"查看文件\"],\r\n  };\r\n  buttonIcon = [\"github\", \"file\"];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: props.title,\r\n      lang: props.lang,\r\n      description: props.description,\r\n      link: props.link,\r\n    };\r\n  }\r\n  render() {\r\n    const isDocument = !this.state.link.startsWith(\"https\");\r\n    const buttonText = this.buttonText[this.state.lang][isDocument | 0];\r\n    const buttonIcon = this.buttonIcon[isDocument | 0];\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <Card style={{ fontFamily: font }}>\r\n        <Card.Content>\r\n          <Card.Header style={{ fontFamily: font }}>\r\n            {this.state.title}\r\n          </Card.Header>\r\n          <Card.Description>{this.state.description}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra align=\"right\">\r\n          <Button\r\n            color=\"linkedin\"\r\n            href={this.state.link}\r\n            style={{ fontFamily: font }}\r\n          >\r\n            <Icon name={buttonIcon} />\r\n            {buttonText}\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport projectData from \"../data/projects-data.json\";\r\nimport ProjectSection from \"../components/projectSection\";\r\nimport { Card, Segment } from \"semantic-ui-react\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nclass Projects extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Projects\", cn: \"项目\" };\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        <Segment>\r\n          <MediaQuery maxDeviceWidth={1224}>\r\n            <Card.Group itemsPerRow={1}>\r\n              {projectData.map((project) => {\r\n                return (\r\n                  <ProjectSection\r\n                    key={project.title[lang] + lang}\r\n                    lang={lang}\r\n                    title={project.title[lang]}\r\n                    description={project.description[lang]}\r\n                    link={project.link}\r\n                  />\r\n                );\r\n              })}\r\n            </Card.Group>\r\n          </MediaQuery>\r\n          <MediaQuery minDeviceWidth={1224}>\r\n            <Card.Group itemsPerRow={2}>\r\n              {projectData.map((project) => {\r\n                return (\r\n                  <ProjectSection\r\n                    key={project.title[lang] + lang}\r\n                    lang={lang}\r\n                    title={project.title[lang]}\r\n                    description={project.description[lang]}\r\n                    link={project.link}\r\n                  />\r\n                );\r\n              })}\r\n            </Card.Group>\r\n          </MediaQuery>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjects.contextType = globalContext;\r\nexport default Projects;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n//  set the highlight\r\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n//\r\nimport {\r\n  jsx,\r\n  javascript,\r\n  typescript,\r\n  css,\r\n} from \"react-syntax-highlighter/dist/esm/languages/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    //\r\n    //\r\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\r\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\n    SyntaxHighlighter.registerLanguage(\"typescript\", typescript);\r\n    SyntaxHighlighter.registerLanguage(\"css\", css);\r\n  }\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <figure className=\"highlight\">\r\n        <SyntaxHighlighter language={language} style={coy}>\r\n          {value}\r\n        </SyntaxHighlighter>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React, { Component } from \"react\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nfunction flatten(text, child) {\r\n  return typeof child === \"string\"\r\n    ? text + child\r\n    : React.Children.toArray(child.props.children).reduce(flatten, text);\r\n}\r\n\r\nfunction HeadingRenderer(props) {\r\n  var children = React.Children.toArray(props.children);\r\n  var text = children.reduce(flatten, \"\");\r\n  return React.createElement(\"h\" + props.level, { id: text }, props.children);\r\n}\r\n\r\nclass MarkdownSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lang: props.lang,\r\n      markdownText: null,\r\n      filePath: props.filePath,\r\n    };\r\n  }\r\n\r\n  async loadMarkdown() {\r\n    await fetch(this.state.filePath)\r\n      .then((response) => response.text())\r\n      .then((text) => this.setState({ markdownText: text }));\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.loadMarkdown();\r\n  }\r\n  render() {\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div style={{ fontFamily: font }}>\r\n        <Container>\r\n          <ReactMarkdown\r\n            escapeHtml={false}\r\n            source={this.state.markdownText}\r\n            renderers={{ code: CodeBlock, heading: HeadingRenderer }}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MarkdownSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport MarkdownSection from \"../components/markdownSection\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const bioPath =\r\n      \"/siyuans-hub/contents/bio-\" + this.context.lang.get + \".md\";\r\n    const pageContent = (\r\n      <MarkdownSection\r\n        key={bioPath}\r\n        filePath={bioPath}\r\n        lang={this.context.lang.get}\r\n      />\r\n    );\r\n    return pageContent;\r\n  }\r\n}\r\nHome.contextType = globalContext;\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dimmer,\r\n  Icon,\r\n  Progress,\r\n  Popup,\r\n  Accordion,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport { globalContext } from \"../siteContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport playlist from \"../../data/music-data.json\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport labels from \"../../data/labels.json\";\r\nimport \"./music-player.css\";\r\nimport MediaQuery from \"react-responsive\";\r\n\r\nclass MusicPlayer extends Component {\r\n  defaultVolume = 0.6;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentSong: 0,\r\n      isPlaying: false,\r\n      progress: 0.0,\r\n      volume: 0.0,\r\n      activeIndex: 0,\r\n      showPlayer: 0,\r\n    };\r\n    this.registeredEvents = false;\r\n    this.currentlyPlaying = 0;\r\n    this.currentVolume = this.state.volume;\r\n    this.savedVolume = 0;\r\n  }\r\n  togglePlay() {\r\n    const player = this.refs.player;\r\n    if (!this.state.isPlaying) {\r\n      player.play();\r\n      this.setState({ isPlaying: true });\r\n    } else {\r\n      player.pause();\r\n      this.setState({ isPlaying: false });\r\n    }\r\n  }\r\n\r\n  playPreviousSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getPrevSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  playNextSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getNextSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  setProgress(evt) {\r\n    const progressBar = ReactDOM.findDOMNode(this.refs.songProgress);\r\n    const percentage =\r\n      (evt.clientX - progressBar.getBoundingClientRect().left) /\r\n      progressBar.clientWidth;\r\n    this.setState({ progress: percentage });\r\n    const player = this.refs.player;\r\n    player.currentTime = player.duration * percentage;\r\n  }\r\n\r\n  selectSong(index) {\r\n    this.setState({ currentSong: index });\r\n    this.setState({ isPlaying: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const menu = document.getElementById(\"playlist\");\r\n    if (menu) {\r\n      const player = document.getElementById(\"mobile-music-player\");\r\n      menu.style.bottom = player.clientHeight + \"px\";\r\n      menu.style.display = \"none\";\r\n    }\r\n\r\n    const volumeSlider = document.getElementById(\"volume-slider\");\r\n    if (volumeSlider) {\r\n      const volumeButton = document.getElementById(\"volume-button\");\r\n      volumeSlider.style.bottom = 14 + volumeButton.clientHeight * 0.9 + \"px\";\r\n      volumeSlider.style.left =\r\n        volumeButton.getBoundingClientRect().left +\r\n        volumeButton.clientWidth / 2 +\r\n        \"px\";\r\n      volumeSlider.style.display = \"none\";\r\n    }\r\n    this.setState({ volume: this.defaultVolume });\r\n    this.refs.player.volume = this.state.volume;\r\n    try {\r\n      this.refs.player.muted = false;\r\n      // this.refs.player.play();\r\n      // this.setState({ isPlaying: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  handlePlaylistClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  handleMusicPlayerAccordionClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { showPlayer } = this.state;\r\n    const newIndex = showPlayer === index ? -1 : index;\r\n\r\n    this.setState({ showPlayer: newIndex });\r\n  };\r\n\r\n  toggleMute() {\r\n    if (this.state.volume !== 0.0) {\r\n      this.savedVolume = this.state.volume;\r\n      this.setState({ volume: 0.0 });\r\n    } else {\r\n      this.setState({ volume: this.savedVolume });\r\n    }\r\n  }\r\n\r\n  getNextSong = () =>\r\n    this.state.currentSong === playlist.length - 1\r\n      ? 0\r\n      : this.state.currentSong + 1;\r\n\r\n  getPrevSong = () =>\r\n    this.state.currentSong === 0\r\n      ? playlist.length - 1\r\n      : this.state.currentSong - 1;\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const { showPlayer } = this.state;\r\n    const font =\r\n      this.context.lang.get === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n\r\n    const player = this.refs.player;\r\n    if (player) {\r\n      if (this.currentlyPlaying !== this.state.currentSong) {\r\n        this.currentlyPlaying = this.state.currentSong;\r\n        player.src = playlist[this.state.currentSong].path;\r\n        player.play();\r\n      }\r\n      if (this.currentVolume !== this.state.volume) {\r\n        this.currentVolume = this.state.volume;\r\n        player.volume = this.currentVolume;\r\n      }\r\n      if (!this.registeredEvents) {\r\n        this.registeredEvents = true;\r\n        player.addEventListener(\"timeupdate\", (evt) => {\r\n          this.setState({ progress: player.currentTime / player.duration });\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <audio ref=\"player\" onEnded={this.playNextSong.bind(this)} muted>\r\n          <source src={playlist[this.state.currentSong].path} />\r\n        </audio>\r\n        {/* Mobile device view */}\r\n        <MediaQuery maxDeviceWidth={1224}>\r\n          <Menu\r\n            id=\"playlist\"\r\n            vertical\r\n            borderless\r\n            size=\"small\"\r\n            style={{\r\n              margin: 0,\r\n              width: \"auto\",\r\n              fontFamily: font,\r\n              position: \"fixed\",\r\n            }}\r\n          >\r\n            {playlist.map((song, index) => {\r\n              const isSelected = index === this.state.currentSong;\r\n              return (\r\n                <div\r\n                  key={song.title + isSelected}\r\n                  onClick={this.selectSong.bind(this, index)}\r\n                  style={{\r\n                    fontSize: \"11px\",\r\n                    width: \"100%\",\r\n                    padding: \"0.2em 1em\",\r\n                  }}\r\n                >\r\n                  <SongSelectionItem\r\n                    index={index}\r\n                    artist={song.artist}\r\n                    title={song.title}\r\n                    selected={isSelected}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </Menu>\r\n          <Slider\r\n            id=\"volume-slider\"\r\n            className=\"custom-slider\"\r\n            orientation=\"vertical\"\r\n            value={this.state.volume * 100}\r\n            aria-labelledby=\"discrete-slider-small-steps\"\r\n            step={20}\r\n            marks\r\n            min={0}\r\n            max={100}\r\n            style={{\r\n              marginTop: \"0.2em\",\r\n              position: \"fixed\",\r\n              padding: 0,\r\n              height: \"40px\",\r\n              zIndex: \"100\",\r\n            }}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(e, val) => {\r\n              console.log(\"Volume: \" + this.state.volume);\r\n              this.setState({ volume: val / 100 });\r\n            }}\r\n          />\r\n          <Segment\r\n            id=\"mobile-music-player\"\r\n            style={{\r\n              width: \"100%\",\r\n              position: \"fixed\",\r\n              bottom: \"0px\",\r\n            }}\r\n          >\r\n            <Grid>\r\n              <Grid.Row centered style={{ padding: \"1em 0 0 0\" }}>\r\n                <Header\r\n                  as=\"h4\"\r\n                  style={{ fontFamily: \"JetBrains Mono\", fontSize: \"12px\" }}\r\n                >\r\n                  {playlist[this.state.currentSong].artist} -{\" \"}\r\n                  {playlist[this.state.currentSong].title}\r\n                </Header>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={5}>\r\n                  <Button.Group icon>\r\n                    <Button\r\n                      id=\"playlist-button\"\r\n                      className=\"mobile-button\"\r\n                      icon=\"list\"\r\n                      size=\"mini\"\r\n                      onClick={() => {\r\n                        const menu = document.getElementById(\"playlist\");\r\n                        menu.style.display =\r\n                          menu.style.display === \"none\" ? \"flex\" : \"none\";\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      className=\"mobile-button\"\r\n                      icon=\"angle double left\"\r\n                      size=\"mini\"\r\n                      onClick={this.playPreviousSong.bind(this)}\r\n                    />\r\n                    <Button\r\n                      ref=\"playButton\"\r\n                      size=\"mini\"\r\n                      className=\"mobile-button\"\r\n                      icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                      onClick={this.togglePlay.bind(this)}\r\n                    />\r\n                    <Button\r\n                      className=\"mobile-button\"\r\n                      icon=\"angle double right\"\r\n                      size=\"mini\"\r\n                      onClick={this.playNextSong.bind(this)}\r\n                    />\r\n                  </Button.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={9} textAlign=\"center\">\r\n                  <Grid\r\n                    style={{\r\n                      position: \"relative\",\r\n                      top: \"15%\",\r\n                      marginLeft: \"0.2em\",\r\n                    }}\r\n                  >\r\n                    <Grid.Row\r\n                      columns=\"equal\"\r\n                      style={{ paddingBottom: 0, fontSize: \"12px\" }}\r\n                    >\r\n                      <Grid.Column\r\n                        textAlign=\"center\"\r\n                        style={{ fontSize: \"11px\" }}\r\n                      >\r\n                        {this.refs.player &&\r\n                          readableDuration(this.refs.player.currentTime)}\r\n                      </Grid.Column>\r\n                      <Grid.Column\r\n                        width={9}\r\n                        textAlign=\"center\"\r\n                        style={{ marginTop: \"0.2em\" }}\r\n                      >\r\n                        <Progress\r\n                          ref=\"songProgress\"\r\n                          active\r\n                          color=\"blue\"\r\n                          size=\"small\"\r\n                          style={{ margin: 0 }}\r\n                          percent={this.state.progress * 100}\r\n                          onClick={this.setProgress.bind(this)}\r\n                        />\r\n                      </Grid.Column>\r\n                      <Grid.Column\r\n                        textAlign=\"center\"\r\n                        style={{ fontSize: \"11px\" }}\r\n                      >\r\n                        <span>\r\n                          {this.refs.player &&\r\n                            readableDuration(this.refs.player.duration)}\r\n                        </span>\r\n                      </Grid.Column>\r\n                    </Grid.Row>\r\n                  </Grid>\r\n                </Grid.Column>\r\n                <Grid.Column\r\n                  width={2}\r\n                  textAlign=\"center\"\r\n                  style={{ paddingLeft: \"0.5em\" }}\r\n                >\r\n                  <Button\r\n                    id=\"volume-button\"\r\n                    className=\"mobile-button\"\r\n                    icon={\r\n                      this.state.volume === 0.0 ? \"volume off\" : \"volume down\"\r\n                    }\r\n                    onClick={() => {\r\n                      const slider = document.getElementById(\"volume-slider\");\r\n                      slider.style.display =\r\n                        slider.style.display === \"none\" ? \"flex\" : \"none\";\r\n                    }}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </MediaQuery>\r\n\r\n        {/* Desktop or laptop view */}\r\n        <MediaQuery minDeviceWidth={1224}>\r\n          <Accordion\r\n            styled\r\n            style={{\r\n              fontFamily: \"JetBrains Mono\",\r\n              marginTop: \"1em\",\r\n            }}\r\n          >\r\n            <Accordion.Title\r\n              active={showPlayer === 0}\r\n              index={0}\r\n              as=\"h3\"\r\n              style={{ fontFamily: font }}\r\n              onClick={this.handleMusicPlayerAccordionClick}\r\n            >\r\n              <Icon name=\"dropdown\" />\r\n              {labels[this.context.lang.get][\"music\"][\"title\"]}\r\n            </Accordion.Title>\r\n\r\n            <Accordion.Content\r\n              active={showPlayer === 0}\r\n              style={{ paddingTop: 0 }}\r\n            >\r\n              <Segment raised color=\"blue\">\r\n                <Grid>\r\n                  {/* Title of the song */}\r\n                  <Grid.Row centered>\r\n                    <Header as=\"h4\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                      {playlist[this.state.currentSong].title}\r\n                    </Header>\r\n                  </Grid.Row>\r\n                  <Grid.Row centered style={{ padding: 0, margin: 0 }}>\r\n                    <Header as=\"h6\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                      {playlist[this.state.currentSong].artist}\r\n                    </Header>\r\n                  </Grid.Row>\r\n                  {/* Progress bar */}\r\n                  <Grid.Row\r\n                    columns=\"equal\"\r\n                    style={{ paddingBottom: 0, fontSize: \"12px\" }}\r\n                  >\r\n                    <Grid.Column textAlign=\"center\">\r\n                      {this.refs.player &&\r\n                        readableDuration(this.refs.player.currentTime)}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={9} textAlign=\"center\">\r\n                      <Progress\r\n                        ref=\"songProgress\"\r\n                        active\r\n                        color=\"blue\"\r\n                        size=\"small\"\r\n                        style={{ margin: 0 }}\r\n                        percent={this.state.progress * 100}\r\n                        onClick={this.setProgress.bind(this)}\r\n                      />\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign=\"center\">\r\n                      <span>\r\n                        {this.refs.player &&\r\n                          readableDuration(this.refs.player.duration)}\r\n                      </span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                  {/* Controls */}\r\n                  <Grid.Row centered style={{ paddingLeft: \"32%\" }}>\r\n                    <Grid.Column width={5}>\r\n                      <Grid>\r\n                        <Grid.Row columns=\"equal\" centered>\r\n                          <Grid.Column textAlign=\"center\">\r\n                            <Popup\r\n                              content={playlist[this.getPrevSong()].title}\r\n                              position=\"bottom center\"\r\n                              trigger={\r\n                                <Button\r\n                                  className=\"music-player-button\"\r\n                                  icon=\"angle double left\"\r\n                                  size=\"small\"\r\n                                  onClick={this.playPreviousSong.bind(this)}\r\n                                />\r\n                              }\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column textAlign=\"center\">\r\n                            <Button\r\n                              ref=\"playButton\"\r\n                              className=\"music-player-button\"\r\n                              size=\"small\"\r\n                              icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                              onClick={this.togglePlay.bind(this)}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column textAlign=\"center\">\r\n                            <Popup\r\n                              content={playlist[this.getNextSong()].title}\r\n                              position=\"bottom center\"\r\n                              trigger={\r\n                                <Button\r\n                                  className=\"music-player-button\"\r\n                                  icon=\"angle double right\"\r\n                                  size=\"small\"\r\n                                  onClick={this.playNextSong.bind(this)}\r\n                                />\r\n                              }\r\n                            />\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      </Grid>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={8} style={{ paddingLeft: \"2em\" }}>\r\n                      <Grid>\r\n                        <Grid.Row columns=\"equal\" centered>\r\n                          <Grid.Column textAlign=\"center\" width={5}>\r\n                            <Button\r\n                              className=\"music-player-button\"\r\n                              size=\"small\"\r\n                              icon={\r\n                                this.state.volume === 0.0\r\n                                  ? \"volume off\"\r\n                                  : \"volume down\"\r\n                              }\r\n                              onClick={this.toggleMute.bind(this)}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column width={8} textAlign=\"center\">\r\n                            <Slider\r\n                              className=\"custom-slider\"\r\n                              value={this.state.volume * 100}\r\n                              aria-labelledby=\"discrete-slider-small-steps\"\r\n                              step={20}\r\n                              marks\r\n                              min={0}\r\n                              max={100}\r\n                              style={{ marginTop: \"0.2em\" }}\r\n                              valueLabelDisplay=\"auto\"\r\n                              onChange={(e, val) =>\r\n                                this.setState({ volume: val / 100 })\r\n                              }\r\n                            />\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      </Grid>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n\r\n              {/* Playlist */}\r\n              <Accordion styled>\r\n                <Accordion.Title\r\n                  active={activeIndex === 0}\r\n                  index={0}\r\n                  as=\"h3\"\r\n                  onClick={this.handlePlaylistClick}\r\n                  style={{ fontFamily: font, marginLeft: \"0.5em\" }}\r\n                >\r\n                  <Icon name=\"dropdown\" />\r\n                  {labels[this.context.lang.get][\"music\"][\"playlist\"]}\r\n                </Accordion.Title>\r\n                <Accordion.Content active={activeIndex === 0}>\r\n                  <Grid\r\n                    divided\r\n                    style={{ fontFamily: \"JetBrains Mono\", fontSize: \"11px\" }}\r\n                  >\r\n                    {playlist.map((song, index) => {\r\n                      const isSelected = index === this.state.currentSong;\r\n                      return (\r\n                        <div\r\n                          key={song.title + isSelected}\r\n                          onClick={this.selectSong.bind(this, index)}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            padding: \"0.5em 0.5em 0.5em 1em\",\r\n                          }}\r\n                        >\r\n                          <SongSelectionItem\r\n                            index={index}\r\n                            artist={song.artist}\r\n                            title={song.title}\r\n                            selected={isSelected}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </Accordion.Content>\r\n              </Accordion>\r\n            </Accordion.Content>\r\n          </Accordion>\r\n        </MediaQuery>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass SongSelectionItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: props.index,\r\n      artist: props.artist,\r\n      title: props.title,\r\n      selected: props.selected,\r\n    };\r\n  }\r\n  handleMouseEnter = () => this.setState({ active: true });\r\n  handleMouseLeave = () => this.setState({ active: false });\r\n  render() {\r\n    const { active } = this.state;\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Grid.Row}\r\n        dimmed={active}\r\n        className=\"song-selection\"\r\n        style={{ padding: \"5px 10px 5px 0.5em\", borderRadius: \"5px\" }}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <span>\r\n          {this.state.selected && <Icon name=\"play\" />} {this.state.index + 1}.{\" \"}\r\n          {this.state.artist} - {this.state.title}\r\n        </span>\r\n        <Dimmer active={active}>\r\n          <Icon name=\"play\" />\r\n          <span> {this.state.title}</span>\r\n        </Dimmer>\r\n      </Dimmer.Dimmable>\r\n    );\r\n  }\r\n}\r\n\r\nlet readableDuration = function (seconds) {\r\n  let sec = Math.floor(seconds);\r\n  let min = Math.floor(sec / 60);\r\n  min = min >= 10 ? min : \"0\" + (isNaN(min) ? 0 : min);\r\n  sec = Math.floor(sec % 60);\r\n  sec = sec >= 10 ? sec : \"0\" + (isNaN(sec) ? 0 : sec);\r\n  return min + \":\" + sec;\r\n};\r\n\r\nMusicPlayer.contextType = globalContext;\r\nexport default MusicPlayer;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Blog from \"./pages/blog\";\r\nimport Projects from \"./pages/projects\";\r\nimport Home from \"./pages/home\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { globalContext } from \"./components/siteContext\";\r\nimport MarkdownSection from \"./components/markdownSection\";\r\nimport MusicPlayer from \"./components/musicPlayer/musicPlayer\";\r\nimport postData from \"./data/post-data.json\";\r\n\r\nclass MobileApp extends Component {\r\n  contextRef = createRef();\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n\r\n    return (\r\n      <Router>\r\n        <div ref={this.contextRef}>\r\n          <Navbar />\r\n          <Container\r\n            id=\"mobile-container\"\r\n            style={{\r\n              padding: \"4em 0\",\r\n              paddingBottom: \"7em\",\r\n            }}\r\n          >\r\n            <Switch>\r\n              <Route path=\"/siyuans-hub/\" exact component={Home} />\r\n              <Route path=\"/siyuans-hub/blog\" exact component={Blog} />\r\n              <Route path=\"/siyuans-hub/projects\" exact component={Projects} />\r\n              {/* Posts */}\r\n              {postData.map((post) => {\r\n                return (\r\n                  <Route\r\n                    key={post.title[lang]}\r\n                    exact\r\n                    path={`/siyuans-hub/blog/${post.id}`}\r\n                  >\r\n                    <MarkdownSection filePath={post.path[lang]} lang={lang} />\r\n                  </Route>\r\n                );\r\n              })}\r\n            </Switch>\r\n          </Container>\r\n          <MusicPlayer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nMobileApp.contextType = globalContext;\r\nexport default MobileApp;\r\n","import React, { Component } from \"react\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Flag } from \"semantic-ui-react\";\r\n\r\nclass LanguageSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"en\",\r\n    };\r\n  }\r\n\r\n  handleLanguageSelection = (e, language) => {\r\n    if (language !== null) {\r\n      this.setState({ language: language });\r\n      this.context.lang.set(language);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToggleButtonGroup\r\n          size=\"small\"\r\n          value={this.state.language}\r\n          exclusive\r\n          onChange={this.handleLanguageSelection}\r\n          aria-label=\"website language\"\r\n        >\r\n          <ToggleButton value=\"en\" aria-label=\"English\">\r\n            <Flag name=\"gb\" /> en\r\n          </ToggleButton>\r\n          <ToggleButton value=\"cn\" aria-label=\"Chinese\">\r\n            <Flag name=\"cn\" /> cn\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanguageSelector.contextType = globalContext;\r\nexport default LanguageSelector;\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageSelector from \"./languageSelector\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport labels from \"../data/labels\";\r\n\r\nclass NavigationMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let itemName = window.location.pathname.substr(13);\r\n    itemName =\r\n      itemName === \"\"\r\n        ? \"Home\"\r\n        : itemName.charAt(0).toUpperCase() + itemName.slice(1);\r\n    this.state = { activeItem: itemName };\r\n  }\r\n\r\n  handleItemClick = (e, { id }) => this.setState({ activeItem: id });\r\n\r\n  render() {\r\n    const url = {\r\n      Home: \"/siyuans-hub/\",\r\n      Blog: \"/siyuans-hub/blog\",\r\n      Projects: \"/siyuans-hub/projects\",\r\n    };\r\n    const { activeItem } = this.state;\r\n    const lang = this.context.lang.get;\r\n    const navLabels = labels[lang][\"navigation\"];\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/siyuans-hub/\">\r\n          <div\r\n            style={{\r\n              marginTop: \"2em\",\r\n              marginLeft: \"2em\",\r\n              marginBottom: \"1.5em\",\r\n              fontFamily: \"JetBrains Mono\",\r\n              fontSize: \"18px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <Image\r\n              src=\"/siyuans-hub/favicon/favicon-32x32.png\"\r\n              verticalAlign=\"middle\"\r\n              style={{ marginRight: \"0.5em\" }}\r\n            />\r\n            <span\r\n              onMouseEnter={(e) => {\r\n                e.target.style.color = \"gray\";\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.target.style.color = \"black\";\r\n              }}\r\n            >\r\n              Siyuan's Hub\r\n            </span>\r\n          </div>\r\n        </Link>\r\n        <Menu fluid vertical tabular>\r\n          {Object.keys(navLabels).map((key) => {\r\n            return (\r\n              <Menu.Item\r\n                key={navLabels[key]}\r\n                id={key}\r\n                name={navLabels[key]}\r\n                as={Link}\r\n                to={url[key]}\r\n                style={{ fontFamily: font, paddingLeft: \"2em\" }}\r\n                active={activeItem === key}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n          <Menu.Item\r\n            attached=\"bottom\"\r\n            style={{ marginTop: \"155%\", textAlign: \"center\", border: \"none\" }}\r\n          >\r\n            <LanguageSelector />\r\n          </Menu.Item>\r\n        </Menu>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nNavigationMenu.contextType = globalContext;\r\nexport default NavigationMenu;\r\n","import React, { Component, createRef } from \"react\";\r\nimport \"./App.css\";\r\nimport NavigationMenu from \"./components/sidebar\";\r\nimport Blog from \"./pages/blog\";\r\nimport Projects from \"./pages/projects\";\r\nimport Home from \"./pages/home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, Segment, Ref, Rail, Sticky } from \"semantic-ui-react\";\r\nimport { globalContext } from \"./components/siteContext\";\r\nimport MarkdownSection from \"./components/markdownSection\";\r\nimport postData from \"./data/post-data.json\";\r\nimport MusicPlayer from \"./components/musicPlayer/musicPlayer\";\r\n\r\nclass App extends Component {\r\n  contextRef = createRef();\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <Ref innerRef={this.contextRef}>\r\n            <Grid\r\n              style={{\r\n                width: \"100%\",\r\n                marginTop: \"0em\",\r\n              }}\r\n            >\r\n              <Grid.Column width={3}>\r\n                <Rail internal position=\"left\" style={{ width: \"100%\" }}>\r\n                  <Sticky context={this.contextRef}>\r\n                    <NavigationMenu />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n              <Grid.Column stretched width={9} style={{ height: \"100%\" }}>\r\n                <Segment style={{ padding: \"1.5em\", overflow: \"auto\" }}>\r\n                  <Switch>\r\n                    <Route path=\"/siyuans-hub/\" exact component={Home} />\r\n                    <Route path=\"/siyuans-hub/blog\" exact component={Blog} />\r\n                    <Route\r\n                      path=\"/siyuans-hub/projects\"\r\n                      exact\r\n                      component={Projects}\r\n                    />\r\n                    {/* Posts */}\r\n                    {postData.map((post) => {\r\n                      return (\r\n                        <Route\r\n                          key={post.title[lang]}\r\n                          exact\r\n                          path={`/siyuans-hub/blog/${post.id}`}\r\n                        >\r\n                          <MarkdownSection\r\n                            filePath={post.path[lang]}\r\n                            lang={lang}\r\n                          />\r\n                        </Route>\r\n                      );\r\n                    })}\r\n                  </Switch>\r\n                </Segment>\r\n              </Grid.Column>\r\n              {/*\r\n              Music Player\r\n            */}\r\n              <Grid.Column width={4}>\r\n                <Rail internal position=\"right\" style={{ width: \"100%\" }}>\r\n                  <Sticky context={this.contextRef}>\r\n                    <MusicPlayer />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Ref>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nApp.contextType = globalContext;\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport MobileApp from \"./MobileApp\";\r\nimport App from \"./App\";\r\nclass WebApp extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* Mobile device view */}\r\n        <MediaQuery maxDeviceWidth={1224}>\r\n          <MobileApp />\r\n        </MediaQuery>\r\n        {/* Desktop or laptop view */}\r\n        <MediaQuery minDeviceWidth={1224}>\r\n          <App />\r\n        </MediaQuery>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport WebApp from \"./WebApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalContextProvider from \"./components/siteContext\";\nimport figlet from \"figlet\";\nimport standard from \"figlet/importable-fonts/Standard.js\";\n\n/* Easter Egg */\nfiglet.parseFont(\"Standard\", standard);\nfiglet.text(\n  \"Welcome to\\nSiyuan's Hub\",\n  {\n    font: \"Standard\",\n  },\n  function (_, data) {\n    console.log(data);\n  }\n);\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <WebApp />\n  </GlobalContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}