{"version":3,"sources":["components/siteContext.jsx","components/languageSelector.jsx","components/sidebar.jsx","components/postSection.jsx","pages/blog.jsx","components/projectSection.jsx","pages/projects.jsx","components/markdownSection.jsx","pages/home.jsx","components/musicPlayer/musicPlayer.jsx","App.js","serviceWorker.js","index.js"],"names":["globalContext","React","createContext","GlobalContextProvider","children","useState","context","lang","get","set","Provider","value","LanguageSelector","props","handleLanguageSelection","e","language","setState","state","ToggleButtonGroup","size","this","exclusive","onChange","aria-label","ToggleButton","Flag","name","Component","contextType","NavigationMenu","tabs","handleItemClick","id","activeItem","itemName","window","location","pathname","substr","charAt","toUpperCase","slice","displayIndex","font","Fragment","to","style","marginTop","marginLeft","marginBottom","fontFamily","fontSize","color","Image","src","verticalAlign","marginRight","onMouseEnter","target","onMouseLeave","Menu","fluid","vertical","tabular","map","tab","Item","key","as","Link","paddingLeft","active","onClick","attached","textAlign","border","PostSection","title","date","tags","imagePath","className","backgroundImage","Content","Header","dangerouslySetInnerHTML","__html","Description","undefined","tag","Label","Blog","pageTitle","en","cn","posts","postData","Segment","secondary","Container","Group","post","image","ProjectSection","buttonText","buttonIcon","description","link","isDocument","startsWith","Card","extra","align","Button","href","Icon","Projects","itemsPerRow","projectData","project","MarkdownSection","markdownText","filePath","fetch","then","response","text","loadMarkdown","escapeHtml","source","Home","bioPath","MusicPlayer","musicPlayerLabel","playlistLabel","handlePlaylistClick","titleProps","index","newIndex","activeIndex","handleMusicPlayerAccordionClick","showPlayer","getNextSong","currentSong","playlist","length","getPrevSong","isPlaying","progress","volume","registeredEvents","currentlyPlaying","currentVolume","savedVolume","player","refs","pause","play","temp","nextSong","evt","progressBar","ReactDOM","findDOMNode","songProgress","percentage","clientX","getBoundingClientRect","left","clientWidth","currentTime","duration","err","console","log","path","addEventListener","ref","onEnded","playNextSong","bind","Accordion","styled","Title","paddingTop","raised","Grid","Row","centered","padding","margin","artist","columns","paddingBottom","Column","readableDuration","width","Progress","percent","setProgress","Popup","content","position","trigger","icon","playPreviousSong","togglePlay","toggleMute","Slider","aria-labelledby","step","marks","min","max","valueLabelDisplay","val","divided","song","isSelected","selectSong","selected","SongSelectionItem","handleMouseEnter","handleMouseLeave","Dimmer","Dimmable","dimmed","borderRadius","seconds","sec","Math","floor","App","contextRef","createRef","Ref","innerRef","Rail","internal","Sticky","stretched","height","overflow","exact","component","Boolean","hostname","match","figlet","parseFont","standard","_","data","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d47565f1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const globalContext = React.createContext({});\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const [language, setLanguage] = React.useState(\"en\");\r\n\r\n  const context = {\r\n    lang: {\r\n      get: language,\r\n      set: setLanguage,\r\n    },\r\n  };\r\n  return (\r\n    <globalContext.Provider value={context}>{children}</globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","import React, { Component } from \"react\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Flag } from \"semantic-ui-react\";\r\n\r\nclass LanguageSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"en\",\r\n    };\r\n  }\r\n\r\n  handleLanguageSelection = (e, language) => {\r\n    if (language !== null) {\r\n      this.setState({ language: language });\r\n      this.context.lang.set(language);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToggleButtonGroup\r\n          size=\"small\"\r\n          value={this.state.language}\r\n          exclusive\r\n          onChange={this.handleLanguageSelection}\r\n          aria-label=\"website language\"\r\n        >\r\n          <ToggleButton value=\"en\" aria-label=\"English\">\r\n            <Flag name={\"gb\"} /> en\r\n          </ToggleButton>\r\n          <ToggleButton value=\"cn\" aria-label=\"Chinese\">\r\n            <Flag name={\"cn\"} /> cn\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanguageSelector.contextType = globalContext;\r\nexport default LanguageSelector;\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageSelector from \"./languageSelector\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nclass NavigationMenu extends Component {\r\n  tabs = [\r\n    [\"Home\", \"首页\", \"/siyuans-hub/\"],\r\n    [\"Blog\", \"博客\", \"/siyuans-hub/blog\"],\r\n    [\"Projects\", \"项目\", \"/siyuans-hub/projects\"],\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let itemName = window.location.pathname.substr(13);\r\n    itemName =\r\n      itemName === \"\"\r\n        ? \"Home\"\r\n        : itemName.charAt(0).toUpperCase() + itemName.slice(1);\r\n    this.state = { activeItem: itemName };\r\n  }\r\n\r\n  handleItemClick = (e, { id }) => this.setState({ activeItem: id });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    const displayIndex = this.context.lang.get === \"en\" ? 0 : 1;\r\n    const font =\r\n      this.context.lang.get === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/siyuans-hub/\">\r\n          <div\r\n            style={{\r\n              marginTop: \"2em\",\r\n              marginLeft: \"2em\",\r\n              marginBottom: \"1.5em\",\r\n              fontFamily: \"JetBrains Mono\",\r\n              fontSize: \"18px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <Image\r\n              src=\"/siyuans-hub/favicon/favicon-32x32.png\"\r\n              verticalAlign=\"middle\"\r\n              style={{ marginRight: \"0.5em\" }}\r\n            />\r\n            <span\r\n              onMouseEnter={(e) => {\r\n                e.target.style.color = \"gray\";\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.target.style.color = \"black\";\r\n              }}\r\n            >\r\n              Siyuan's Hub\r\n            </span>\r\n          </div>\r\n        </Link>\r\n        <Menu fluid vertical tabular>\r\n          {this.tabs.map((tab) => {\r\n            return (\r\n              <Menu.Item\r\n                key={tab[0]}\r\n                id={tab[0]}\r\n                name={tab[displayIndex]}\r\n                as={Link}\r\n                to={tab[2]}\r\n                style={{ fontFamily: font, paddingLeft: \"2em\" }}\r\n                active={activeItem === tab[0]}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n          <Menu.Item\r\n            attached=\"bottom\"\r\n            style={{ marginTop: \"155%\", textAlign: \"center\", border: \"none\" }}\r\n          >\r\n            <LanguageSelector />\r\n          </Menu.Item>\r\n        </Menu>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nNavigationMenu.contextType = globalContext;\r\nexport default NavigationMenu;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Image, Label, Item } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PostSection extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      title: props.title,\r\n      date: props.date,\r\n      tags: props.tags,\r\n      font: props.font,\r\n      imagePath: props.imagePath,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n    return (\r\n      <Item\r\n        as={Link}\r\n        to={`/siyuans-hub/blog/${this.state.id}`}\r\n        style={{ fontFamily: font }}\r\n      >\r\n        <div\r\n          className=\"image\"\r\n          style={{ backgroundImage: `url(${this.state.imagePath})` }}\r\n        ></div>\r\n        <Item.Content>\r\n          <Item.Header\r\n            style={{\r\n              fontSize: \"16px\",\r\n              marginBottom: \"0.3em\",\r\n              fontFamily: font,\r\n            }}\r\n            dangerouslySetInnerHTML={{ __html: this.state.title }}\r\n          ></Item.Header>\r\n          <Item.Description style={{ color: \"gray\", marginBottom: \"0.3em\" }}>\r\n            <span>{this.state.date}</span>\r\n          </Item.Description>\r\n          <Item.Content>\r\n            {this.state.tags !== undefined &&\r\n              this.state.tags.map((tag) => {\r\n                return <Label key={tag}>{tag}</Label>;\r\n              })}\r\n          </Item.Content>\r\n        </Item.Content>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\n\r\nPostSection.contextType = globalContext;\r\nexport default PostSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport PostSection from \"../components/postSection\";\r\nimport { Container, Segment, Item } from \"semantic-ui-react\";\r\nimport postData from \"../data/post-data.json\";\r\n\r\nclass Blog extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Blog\", cn: \"博客\" };\r\n  render() {\r\n    let posts = postData.slice(0, 1);\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        {\r\n          <Segment secondary>\r\n            <Container>\r\n              <Item.Group>\r\n                {posts.map((post) => {\r\n                  return (\r\n                    <PostSection\r\n                      key={post.title[lang]}\r\n                      style={{ fontFamily: font }}\r\n                      id={post.id}\r\n                      title={post.title[lang]}\r\n                      date={post.date}\r\n                      tags={post.tags[lang]}\r\n                      imagePath={post.image}\r\n                      font={font}\r\n                    />\r\n                  );\r\n                })}\r\n              </Item.Group>\r\n            </Container>\r\n          </Segment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBlog.contextType = globalContext;\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass ProjectSection extends Component {\r\n  buttonText = {\r\n    en: [\"View Source Code\", \"View Document\"],\r\n    cn: [\"查看源代码\", \"查看文件\"],\r\n  };\r\n  buttonIcon = [\"github\", \"file\"];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: props.title,\r\n      lang: props.lang,\r\n      description: props.description,\r\n      link: props.link,\r\n    };\r\n  }\r\n  render() {\r\n    const isDocument = !this.state.link.startsWith(\"https\");\r\n    const buttonText = this.buttonText[this.state.lang][isDocument | 0];\r\n    const buttonIcon = this.buttonIcon[isDocument | 0];\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <Card style={{ fontFamily: font }}>\r\n        <Card.Content>\r\n          <Card.Header style={{ fontFamily: font }}>\r\n            {this.state.title}\r\n          </Card.Header>\r\n          <Card.Description>{this.state.description}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra align=\"right\">\r\n          <Button\r\n            color=\"linkedin\"\r\n            href={this.state.link}\r\n            style={{ fontFamily: font }}\r\n          >\r\n            <Icon name={buttonIcon} />\r\n            {buttonText}\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport projectData from \"../data/projects-data.json\";\r\nimport ProjectSection from \"../components/projectSection\";\r\nimport { Card, Segment } from \"semantic-ui-react\";\r\n\r\nclass Projects extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Projects\", cn: \"项目\" };\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        <Segment>\r\n          <Card.Group itemsPerRow={2}>\r\n            {projectData.map((project) => {\r\n              return (\r\n                <ProjectSection\r\n                  key={project.title[lang] + lang}\r\n                  lang={lang}\r\n                  title={project.title[lang]}\r\n                  description={project.description[lang]}\r\n                  link={project.link}\r\n                />\r\n              );\r\n            })}\r\n          </Card.Group>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjects.contextType = globalContext;\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass MarkdownSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lang: props.lang,\r\n      markdownText: null,\r\n      filePath: props.filePath,\r\n    };\r\n  }\r\n\r\n  async loadMarkdown() {\r\n    await fetch(this.state.filePath)\r\n      .then((response) => response.text())\r\n      .then((text) => this.setState({ markdownText: text }));\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.loadMarkdown();\r\n  }\r\n  render() {\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div style={{ fontFamily: font }}>\r\n        <Container textAlign=\"justified\">\r\n          <ReactMarkdown escapeHtml={false} source={this.state.markdownText} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MarkdownSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport MarkdownSection from \"../components/markdownSection\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const bioPath =\r\n      \"/siyuans-hub/contents/bio-\" + this.context.lang.get + \".md\";\r\n    const pageContent = (\r\n      <MarkdownSection\r\n        key={bioPath}\r\n        filePath={bioPath}\r\n        lang={this.context.lang.get}\r\n      />\r\n    );\r\n    return pageContent;\r\n  }\r\n}\r\nHome.contextType = globalContext;\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dimmer,\r\n  Icon,\r\n  Progress,\r\n  Popup,\r\n  Accordion,\r\n} from \"semantic-ui-react\";\r\nimport { globalContext } from \"../siteContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport playlist from \"../../data/music-data.json\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./music-player.css\";\r\n\r\nclass MusicPlayer extends Component {\r\n  musicPlayerLabel = {\r\n    en: \"Music Player\",\r\n    cn: \"音乐播放器\",\r\n  };\r\n\r\n  playlistLabel = {\r\n    en: \"Playlist\",\r\n    cn: \"播放列表\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentSong: 0,\r\n      isPlaying: false,\r\n      progress: 0.0,\r\n      volume: 0.6,\r\n      activeIndex: 0,\r\n      showPlayer: 0,\r\n    };\r\n    this.registeredEvents = false;\r\n    this.currentlyPlaying = 0;\r\n    this.currentVolume = this.state.volume;\r\n    this.savedVolume = 0;\r\n  }\r\n  togglePlay() {\r\n    const player = this.refs.player;\r\n    if (!this.state.isPlaying) {\r\n      player.play();\r\n      this.setState({ isPlaying: true });\r\n    } else {\r\n      player.pause();\r\n      this.setState({ isPlaying: false });\r\n    }\r\n  }\r\n\r\n  playPreviousSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getPrevSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  playNextSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getNextSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  setProgress(evt) {\r\n    const progressBar = ReactDOM.findDOMNode(this.refs.songProgress);\r\n    const percentage =\r\n      (evt.clientX - progressBar.getBoundingClientRect().left) /\r\n      progressBar.clientWidth;\r\n    this.setState({ progress: percentage });\r\n    const player = this.refs.player;\r\n    player.currentTime = player.duration * percentage;\r\n  }\r\n\r\n  selectSong(index) {\r\n    this.setState({ currentSong: index });\r\n    this.setState({ isPlaying: true });\r\n  }\r\n\r\n  handleVolumeChange(value) {}\r\n\r\n  componentDidMount() {\r\n    this.setState({ isPlaying: true });\r\n    this.refs.player.volume = this.state.volume;\r\n    try {\r\n      this.refs.player.play();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  handlePlaylistClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  handleMusicPlayerAccordionClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { showPlayer } = this.state;\r\n    const newIndex = showPlayer === index ? -1 : index;\r\n\r\n    this.setState({ showPlayer: newIndex });\r\n  };\r\n\r\n  toggleMute() {\r\n    if (this.state.volume !== 0.0) {\r\n      this.savedVolume = this.state.volume;\r\n      this.setState({ volume: 0.0 });\r\n    } else {\r\n      this.setState({ volume: this.savedVolume });\r\n    }\r\n  }\r\n\r\n  getNextSong = () =>\r\n    this.state.currentSong === playlist.length - 1\r\n      ? 0\r\n      : this.state.currentSong + 1;\r\n\r\n  getPrevSong = () =>\r\n    this.state.currentSong === 0\r\n      ? playlist.length - 1\r\n      : this.state.currentSong - 1;\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const { showPlayer } = this.state;\r\n    const font =\r\n      this.context.lang.get === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n\r\n    const player = this.refs.player;\r\n    if (player) {\r\n      if (this.currentlyPlaying !== this.state.currentSong) {\r\n        this.currentlyPlaying = this.state.currentSong;\r\n        player.src = playlist[this.state.currentSong].path;\r\n        player.play();\r\n      }\r\n      if (this.currentVolume !== this.state.volume) {\r\n        this.currentVolume = this.state.volume;\r\n        player.volume = this.currentVolume;\r\n      }\r\n      if (!this.registeredEvents) {\r\n        this.registeredEvents = true;\r\n        player.addEventListener(\"timeupdate\", (evt) => {\r\n          this.setState({ progress: player.currentTime / player.duration });\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <audio ref=\"player\" onEnded={this.playNextSong.bind(this)}>\r\n          <source src={playlist[this.state.currentSong].path} />\r\n        </audio>\r\n        <Accordion\r\n          styled\r\n          style={{\r\n            fontFamily: \"JetBrains Mono\",\r\n            marginTop: \"1em\",\r\n          }}\r\n        >\r\n          <Accordion.Title\r\n            active={showPlayer === 0}\r\n            index={0}\r\n            as=\"h3\"\r\n            style={{ fontFamily: font }}\r\n            onClick={this.handleMusicPlayerAccordionClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            {this.musicPlayerLabel[this.context.lang.get]}\r\n          </Accordion.Title>\r\n\r\n          <Accordion.Content\r\n            active={showPlayer === 0}\r\n            style={{ paddingTop: 0 }}\r\n          >\r\n            <Segment raised color=\"blue\">\r\n              <Grid>\r\n                {/* Title of the song */}\r\n                <Grid.Row centered>\r\n                  <Header as=\"h4\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                    {playlist[this.state.currentSong].title}\r\n                  </Header>\r\n                </Grid.Row>\r\n                <Grid.Row centered style={{ padding: 0, margin: 0 }}>\r\n                  <Header as=\"h6\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                    {playlist[this.state.currentSong].artist}\r\n                  </Header>\r\n                </Grid.Row>\r\n                {/* Progress bar */}\r\n                <Grid.Row\r\n                  columns=\"equal\"\r\n                  style={{ paddingBottom: 0, fontSize: \"12px\" }}\r\n                >\r\n                  <Grid.Column textAlign=\"center\">\r\n                    {this.refs.player &&\r\n                      readableDuration(this.refs.player.currentTime)}\r\n                  </Grid.Column>\r\n                  <Grid.Column width={9} textAlign=\"center\">\r\n                    <Progress\r\n                      ref=\"songProgress\"\r\n                      active\r\n                      color=\"blue\"\r\n                      size=\"small\"\r\n                      style={{ margin: 0 }}\r\n                      percent={this.state.progress * 100}\r\n                      onClick={this.setProgress.bind(this)}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column textAlign=\"center\">\r\n                    <span>\r\n                      {this.refs.player &&\r\n                        readableDuration(this.refs.player.duration)}\r\n                    </span>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {/* Controls */}\r\n                <Grid.Row centered style={{ paddingLeft: \"32%\" }}>\r\n                  <Grid.Column width={5}>\r\n                    <Grid>\r\n                      <Grid.Row columns=\"equal\" centered>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Popup\r\n                            content={playlist[this.getPrevSong()].title}\r\n                            position=\"bottom center\"\r\n                            trigger={\r\n                              <Button\r\n                                className=\"music-player-button\"\r\n                                icon=\"angle double left\"\r\n                                size=\"small\"\r\n                                onClick={this.playPreviousSong.bind(this)}\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Button\r\n                            ref=\"playButton\"\r\n                            className=\"music-player-button\"\r\n                            size=\"small\"\r\n                            icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                            onClick={this.togglePlay.bind(this)}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Popup\r\n                            content={playlist[this.getNextSong()].title}\r\n                            position=\"bottom center\"\r\n                            trigger={\r\n                              <Button\r\n                                className=\"music-player-button\"\r\n                                icon=\"angle double right\"\r\n                                size=\"small\"\r\n                                onClick={this.playNextSong.bind(this)}\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={8} style={{ paddingLeft: \"2em\" }}>\r\n                    <Grid>\r\n                      <Grid.Row columns=\"equal\" centered>\r\n                        <Grid.Column textAlign=\"center\" width={5}>\r\n                          <Button\r\n                            className=\"music-player-button\"\r\n                            size=\"small\"\r\n                            icon={\r\n                              this.state.volume === 0.0\r\n                                ? \"volume off\"\r\n                                : \"volume down\"\r\n                            }\r\n                            onClick={this.toggleMute.bind(this)}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8} textAlign=\"center\">\r\n                          <Slider\r\n                            className=\"custom-slider\"\r\n                            value={this.state.volume * 100}\r\n                            aria-labelledby=\"discrete-slider-small-steps\"\r\n                            step={20}\r\n                            marks\r\n                            min={0}\r\n                            max={100}\r\n                            style={{ marginTop: \"0.2em\" }}\r\n                            valueLabelDisplay=\"auto\"\r\n                            onChange={(e, val) =>\r\n                              this.setState({ volume: val / 100 })\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Segment>\r\n\r\n            {/* Playlist */}\r\n            <Accordion styled>\r\n              <Accordion.Title\r\n                active={activeIndex === 0}\r\n                index={0}\r\n                as=\"h3\"\r\n                onClick={this.handlePlaylistClick}\r\n                style={{ fontFamily: font, marginLeft: \"0.5em\" }}\r\n              >\r\n                <Icon name=\"dropdown\" />\r\n                {this.playlistLabel[this.context.lang.get]}\r\n              </Accordion.Title>\r\n              <Accordion.Content active={activeIndex === 0}>\r\n                <Grid\r\n                  divided\r\n                  style={{ fontFamily: \"JetBrains Mono\", fontSize: \"11px\" }}\r\n                >\r\n                  {playlist.map((song, index) => {\r\n                    const isSelected = index === this.state.currentSong;\r\n                    return (\r\n                      <div\r\n                        key={song.title + isSelected}\r\n                        onClick={this.selectSong.bind(this, index)}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          padding: \"0.5em 0.5em 0.5em 1em\",\r\n                        }}\r\n                      >\r\n                        <SongSelectionItem\r\n                          index={index}\r\n                          artist={song.artist}\r\n                          title={song.title}\r\n                          selected={isSelected}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass SongSelectionItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: props.index,\r\n      artist: props.artist,\r\n      title: props.title,\r\n      selected: props.selected,\r\n    };\r\n  }\r\n  handleMouseEnter = () => this.setState({ active: true });\r\n  handleMouseLeave = () => this.setState({ active: false });\r\n  render() {\r\n    const { active } = this.state;\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Grid.Row}\r\n        dimmed={active}\r\n        className=\"song-selection\"\r\n        style={{ padding: \"5px 10px 5px 0.5em\", borderRadius: \"5px\" }}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <span>\r\n          {this.state.selected && <Icon name=\"play\" />} {this.state.index + 1}.{\" \"}\r\n          {this.state.artist} - {this.state.title}\r\n        </span>\r\n        <Dimmer active={active}>\r\n          <Icon name=\"play\" />\r\n          <span> {this.state.title}</span>\r\n        </Dimmer>\r\n      </Dimmer.Dimmable>\r\n    );\r\n  }\r\n}\r\n\r\nlet readableDuration = function (seconds) {\r\n  let sec = Math.floor(seconds);\r\n  let min = Math.floor(sec / 60);\r\n  min = min >= 10 ? min : \"0\" + min;\r\n  sec = Math.floor(sec % 60);\r\n  sec = sec >= 10 ? sec : \"0\" + sec;\r\n  return min + \":\" + sec;\r\n};\r\n\r\nMusicPlayer.contextType = globalContext;\r\nexport default MusicPlayer;\r\n","import React, { Component, createRef } from \"react\";\r\nimport \"./App.css\";\r\nimport NavigationMenu from \"./components/sidebar\";\r\nimport Blog from \"./pages/blog\";\r\nimport Projects from \"./pages/projects\";\r\nimport Home from \"./pages/home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, Segment, Ref, Rail, Sticky } from \"semantic-ui-react\";\r\nimport { globalContext } from \"./components/siteContext\";\r\nimport MarkdownSection from \"./components/markdownSection\";\r\nimport postData from \"./data/post-data.json\";\r\nimport MusicPlayer from \"./components/musicPlayer/musicPlayer\";\r\n\r\nclass App extends Component {\r\n  contextRef = createRef();\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <Ref innerRef={this.contextRef}>\r\n            <Grid\r\n              style={{\r\n                width: \"100%\",\r\n                marginTop: \"0em\",\r\n              }}\r\n            >\r\n              <Grid.Column width={3}>\r\n                <Rail internal position=\"left\">\r\n                  <Sticky context={this.contextRef}>\r\n                    <NavigationMenu />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n              <Grid.Column stretched width={9} style={{ height: \"100%\" }}>\r\n                <Segment style={{ padding: \"1.5em\", overflow: \"auto\" }}>\r\n                  <Switch>\r\n                    <Route path=\"/siyuans-hub/\" exact component={Home} />\r\n                    <Route path=\"/siyuans-hub/blog\" exact component={Blog} />\r\n                    <Route\r\n                      path=\"/siyuans-hub/projects\"\r\n                      exact\r\n                      component={Projects}\r\n                    />\r\n                    {/* Posts */}\r\n                    {postData.map((post) => {\r\n                      return (\r\n                        <Route\r\n                          key={post.title[lang]}\r\n                          exact\r\n                          path={`/siyuans-hub/blog/${post.id}`}\r\n                        >\r\n                          <MarkdownSection\r\n                            filePath={post.path[lang]}\r\n                            lang={lang}\r\n                          />\r\n                        </Route>\r\n                      );\r\n                    })}\r\n                  </Switch>\r\n                </Segment>\r\n              </Grid.Column>\r\n              {/*\r\n              Music Player\r\n            */}\r\n              <Grid.Column width={4}>\r\n                <Rail internal position=\"right\" style={{ width: \"100%\" }}>\r\n                  <Sticky context={this.contextRef}>\r\n                    <MusicPlayer />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Ref>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nApp.contextType = globalContext;\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalContextProvider from \"./components/siteContext\";\nimport figlet from \"figlet\";\nimport standard from \"figlet/importable-fonts/Standard.js\";\n\n/* Easter Egg */\nfiglet.parseFont(\"Standard\", standard);\nfiglet.text(\n  \"Welcome to\\nSiyuan's Hub\",\n  {\n    font: \"Standard\",\n  },\n  function (_, data) {\n    console.log(data);\n  }\n);\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <App />\n  </GlobalContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}