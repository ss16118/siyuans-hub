{"version":3,"sources":["components/siteContext.jsx","components/languageSelector.jsx","components/sidebar.jsx","components/postSection.jsx","pages/blog.jsx","components/projectSection.jsx","pages/projects.jsx","components/CodeBlock.js","components/markdownSection.jsx","pages/home.jsx","components/musicPlayer/musicPlayer.jsx","App.js","serviceWorker.js","index.js"],"names":["globalContext","React","createContext","GlobalContextProvider","children","useState","context","lang","get","set","Provider","value","LanguageSelector","props","handleLanguageSelection","e","language","setState","state","ToggleButtonGroup","size","this","exclusive","onChange","aria-label","ToggleButton","Flag","name","Component","contextType","NavigationMenu","tabs","handleItemClick","id","activeItem","itemName","window","location","pathname","substr","charAt","toUpperCase","slice","displayIndex","font","Fragment","to","style","marginTop","marginLeft","marginBottom","fontFamily","fontSize","color","Image","src","verticalAlign","marginRight","onMouseEnter","target","onMouseLeave","Menu","fluid","vertical","tabular","map","tab","Item","key","as","Link","paddingLeft","active","onClick","attached","textAlign","border","PostSection","getItemContainer","elem","nodeName","parentNode","title","date","tags","imagePath","className","boxShadow","backgroundImage","Segment","margin","padding","Content","Header","dangerouslySetInnerHTML","__html","Description","undefined","tag","Label","Blog","pageTitle","en","cn","posts","postData","Container","Group","divided","post","image","ProjectSection","buttonText","buttonIcon","description","link","isDocument","startsWith","Card","extra","align","Button","href","Icon","Projects","itemsPerRow","projectData","project","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","typescript","css","coy","PureComponent","defaultProps","flatten","text","child","Children","toArray","reduce","HeadingRenderer","createElement","level","MarkdownSection","markdownText","filePath","fetch","then","response","loadMarkdown","escapeHtml","source","renderers","code","heading","Home","bioPath","MusicPlayer","musicPlayerLabel","playlistLabel","handlePlaylistClick","titleProps","index","newIndex","activeIndex","handleMusicPlayerAccordionClick","showPlayer","getNextSong","currentSong","playlist","length","getPrevSong","isPlaying","progress","volume","registeredEvents","currentlyPlaying","currentVolume","savedVolume","player","refs","pause","play","temp","nextSong","evt","progressBar","ReactDOM","findDOMNode","songProgress","percentage","clientX","getBoundingClientRect","left","clientWidth","currentTime","duration","path","addEventListener","ref","onEnded","playNextSong","bind","Accordion","styled","Title","paddingTop","raised","Grid","Row","centered","artist","columns","paddingBottom","Column","readableDuration","width","Progress","percent","setProgress","Popup","content","position","trigger","icon","playPreviousSong","togglePlay","toggleMute","Slider","aria-labelledby","step","marks","min","max","valueLabelDisplay","val","song","isSelected","selectSong","selected","SongSelectionItem","handleMouseEnter","handleMouseLeave","Dimmer","Dimmable","dimmed","borderRadius","seconds","sec","Math","floor","App","contextRef","createRef","Ref","innerRef","Rail","internal","Sticky","stretched","height","overflow","exact","component","Boolean","hostname","match","figlet","parseFont","standard","_","data","console","log","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.386b5a11.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const globalContext = React.createContext({});\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const [language, setLanguage] = React.useState(\"en\");\r\n\r\n  const context = {\r\n    lang: {\r\n      get: language,\r\n      set: setLanguage,\r\n    },\r\n  };\r\n  return (\r\n    <globalContext.Provider value={context}>{children}</globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","import React, { Component } from \"react\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Flag } from \"semantic-ui-react\";\r\n\r\nclass LanguageSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"en\",\r\n    };\r\n  }\r\n\r\n  handleLanguageSelection = (e, language) => {\r\n    if (language !== null) {\r\n      this.setState({ language: language });\r\n      this.context.lang.set(language);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToggleButtonGroup\r\n          size=\"small\"\r\n          value={this.state.language}\r\n          exclusive\r\n          onChange={this.handleLanguageSelection}\r\n          aria-label=\"website language\"\r\n        >\r\n          <ToggleButton value=\"en\" aria-label=\"English\">\r\n            <Flag name={\"gb\"} /> en\r\n          </ToggleButton>\r\n          <ToggleButton value=\"cn\" aria-label=\"Chinese\">\r\n            <Flag name={\"cn\"} /> cn\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanguageSelector.contextType = globalContext;\r\nexport default LanguageSelector;\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageSelector from \"./languageSelector\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nclass NavigationMenu extends Component {\r\n  tabs = [\r\n    [\"Home\", \"首页\", \"/siyuans-hub/\"],\r\n    [\"Blog\", \"博客\", \"/siyuans-hub/blog\"],\r\n    [\"Projects\", \"项目\", \"/siyuans-hub/projects\"],\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let itemName = window.location.pathname.substr(13);\r\n    itemName =\r\n      itemName === \"\"\r\n        ? \"Home\"\r\n        : itemName.charAt(0).toUpperCase() + itemName.slice(1);\r\n    this.state = { activeItem: itemName };\r\n  }\r\n\r\n  handleItemClick = (e, { id }) => this.setState({ activeItem: id });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    const displayIndex = this.context.lang.get === \"en\" ? 0 : 1;\r\n    const font =\r\n      this.context.lang.get === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/siyuans-hub/\">\r\n          <div\r\n            style={{\r\n              marginTop: \"2em\",\r\n              marginLeft: \"2em\",\r\n              marginBottom: \"1.5em\",\r\n              fontFamily: \"JetBrains Mono\",\r\n              fontSize: \"18px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            <Image\r\n              src=\"/siyuans-hub/favicon/favicon-32x32.png\"\r\n              verticalAlign=\"middle\"\r\n              style={{ marginRight: \"0.5em\" }}\r\n            />\r\n            <span\r\n              onMouseEnter={(e) => {\r\n                e.target.style.color = \"gray\";\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.target.style.color = \"black\";\r\n              }}\r\n            >\r\n              Siyuan's Hub\r\n            </span>\r\n          </div>\r\n        </Link>\r\n        <Menu fluid vertical tabular>\r\n          {this.tabs.map((tab) => {\r\n            return (\r\n              <Menu.Item\r\n                key={tab[0]}\r\n                id={tab[0]}\r\n                name={tab[displayIndex]}\r\n                as={Link}\r\n                to={tab[2]}\r\n                style={{ fontFamily: font, paddingLeft: \"2em\" }}\r\n                active={activeItem === tab[0]}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n          <Menu.Item\r\n            attached=\"bottom\"\r\n            style={{ marginTop: \"155%\", textAlign: \"center\", border: \"none\" }}\r\n          >\r\n            <LanguageSelector />\r\n          </Menu.Item>\r\n        </Menu>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nNavigationMenu.contextType = globalContext;\r\nexport default NavigationMenu;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"./siteContext\";\r\nimport { Segment, Label, Item } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass PostSection extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: props.id,\r\n      title: props.title,\r\n      date: props.date,\r\n      tags: props.tags,\r\n      font: props.font,\r\n      imagePath: props.imagePath,\r\n    };\r\n  }\r\n\r\n  getItemContainer = (elem) => {\r\n    return elem.nodeName === \"A\"\r\n      ? elem\r\n      : this.getItemContainer(elem.parentNode);\r\n  };\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n    return (\r\n      <Item\r\n        as={Link}\r\n        to={`/siyuans-hub/blog/${this.state.id}`}\r\n        className=\"post-section\"\r\n        style={{ fontFamily: font }}\r\n        onMouseEnter={(e) => {\r\n          const itemContainer = this.getItemContainer(e.target);\r\n          itemContainer.style.boxShadow =\r\n            \"0 2px 4px 0 rgba(34,36,38,.12), 0 2px 10px 0 rgba(34,36,38,.15)\";\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          const itemContainer = this.getItemContainer(e.target);\r\n          itemContainer.style.boxShadow = \"none\";\r\n        }}\r\n      >\r\n        <div\r\n          className=\"image\"\r\n          style={{ backgroundImage: `url(${this.state.imagePath})` }}\r\n        ></div>\r\n        <Segment\r\n          style={{\r\n            margin: 0,\r\n            padding: 0,\r\n            marginLeft: \"1em\",\r\n            border: \"none\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          <Item.Content>\r\n            <Item.Header\r\n              style={{\r\n                fontSize: \"14px\",\r\n                fontFamily: font,\r\n                marginBottom: \"0.3em\",\r\n              }}\r\n              dangerouslySetInnerHTML={{ __html: this.state.title }}\r\n            ></Item.Header>\r\n            <Item.Description style={{ color: \"gray\", marginBottom: \"0.3em\" }}>\r\n              <span>{this.state.date}</span>\r\n            </Item.Description>\r\n            <Item.Content>\r\n              {this.state.tags !== undefined &&\r\n                this.state.tags.map((tag) => {\r\n                  return <Label key={tag}>{tag}</Label>;\r\n                })}\r\n            </Item.Content>\r\n          </Item.Content>\r\n        </Segment>\r\n      </Item>\r\n    );\r\n  }\r\n}\r\n\r\nPostSection.contextType = globalContext;\r\nexport default PostSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport PostSection from \"../components/postSection\";\r\nimport { Container, Segment, Item } from \"semantic-ui-react\";\r\nimport postData from \"../data/post-data.json\";\r\n\r\nclass Blog extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Blog\", cn: \"博客\" };\r\n  render() {\r\n    const posts = postData; //.slice(0, 1);\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        {\r\n          <Segment>\r\n            <Container>\r\n              <Item.Group divided>\r\n                {posts.map((post) => {\r\n                  return (\r\n                    <PostSection\r\n                      key={post.title[lang]}\r\n                      style={{ fontFamily: font }}\r\n                      id={post.id}\r\n                      title={post.title[lang]}\r\n                      date={post.date}\r\n                      tags={post.tags[lang]}\r\n                      imagePath={post.image}\r\n                      font={font}\r\n                    />\r\n                  );\r\n                })}\r\n              </Item.Group>\r\n            </Container>\r\n          </Segment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBlog.contextType = globalContext;\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass ProjectSection extends Component {\r\n  buttonText = {\r\n    en: [\"View Source Code\", \"View Document\"],\r\n    cn: [\"查看源代码\", \"查看文件\"],\r\n  };\r\n  buttonIcon = [\"github\", \"file\"];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: props.title,\r\n      lang: props.lang,\r\n      description: props.description,\r\n      link: props.link,\r\n    };\r\n  }\r\n  render() {\r\n    const isDocument = !this.state.link.startsWith(\"https\");\r\n    const buttonText = this.buttonText[this.state.lang][isDocument | 0];\r\n    const buttonIcon = this.buttonIcon[isDocument | 0];\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <Card style={{ fontFamily: font }}>\r\n        <Card.Content>\r\n          <Card.Header style={{ fontFamily: font }}>\r\n            {this.state.title}\r\n          </Card.Header>\r\n          <Card.Description>{this.state.description}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra align=\"right\">\r\n          <Button\r\n            color=\"linkedin\"\r\n            href={this.state.link}\r\n            style={{ fontFamily: font }}\r\n          >\r\n            <Icon name={buttonIcon} />\r\n            {buttonText}\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport projectData from \"../data/projects-data.json\";\r\nimport ProjectSection from \"../components/projectSection\";\r\nimport { Card, Segment } from \"semantic-ui-react\";\r\n\r\nclass Projects extends Component {\r\n  state = {};\r\n  pageTitle = { en: \"Projects\", cn: \"项目\" };\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n    const font = lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div>\r\n        <h1 style={{ fontFamily: font }}>{this.pageTitle[lang]}</h1>\r\n        <Segment>\r\n          <Card.Group itemsPerRow={2}>\r\n            {projectData.map((project) => {\r\n              return (\r\n                <ProjectSection\r\n                  key={project.title[lang] + lang}\r\n                  lang={lang}\r\n                  title={project.title[lang]}\r\n                  description={project.description[lang]}\r\n                  link={project.link}\r\n                />\r\n              );\r\n            })}\r\n          </Card.Group>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjects.contextType = globalContext;\r\nexport default Projects;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n//  set the highlight\r\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n//\r\nimport {\r\n  jsx,\r\n  javascript,\r\n  typescript,\r\n  css,\r\n} from \"react-syntax-highlighter/dist/esm/languages/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    //\r\n    //\r\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\r\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\n    SyntaxHighlighter.registerLanguage(\"typescript\", typescript);\r\n    SyntaxHighlighter.registerLanguage(\"css\", css);\r\n  }\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <figure className=\"highlight\">\r\n        <SyntaxHighlighter language={language} style={coy}>\r\n          {value}\r\n        </SyntaxHighlighter>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React, { Component } from \"react\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nfunction flatten(text, child) {\r\n  return typeof child === \"string\"\r\n    ? text + child\r\n    : React.Children.toArray(child.props.children).reduce(flatten, text);\r\n}\r\n\r\nfunction HeadingRenderer(props) {\r\n  var children = React.Children.toArray(props.children);\r\n  var text = children.reduce(flatten, \"\");\r\n  return React.createElement(\"h\" + props.level, { id: text }, props.children);\r\n}\r\n\r\nclass MarkdownSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lang: props.lang,\r\n      markdownText: null,\r\n      filePath: props.filePath,\r\n    };\r\n  }\r\n\r\n  async loadMarkdown() {\r\n    await fetch(this.state.filePath)\r\n      .then((response) => response.text())\r\n      .then((text) => this.setState({ markdownText: text }));\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.loadMarkdown();\r\n  }\r\n  render() {\r\n    const font = this.state.lang === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n    return (\r\n      <div style={{ fontFamily: font }}>\r\n        <Container textAlign=\"justified\">\r\n          <ReactMarkdown\r\n            escapeHtml={false}\r\n            source={this.state.markdownText}\r\n            renderers={{ code: CodeBlock, heading: HeadingRenderer }}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MarkdownSection;\r\n","import React, { Component } from \"react\";\r\nimport { globalContext } from \"../components/siteContext\";\r\nimport MarkdownSection from \"../components/markdownSection\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const bioPath =\r\n      \"/siyuans-hub/contents/bio-\" + this.context.lang.get + \".md\";\r\n    const pageContent = (\r\n      <MarkdownSection\r\n        key={bioPath}\r\n        filePath={bioPath}\r\n        lang={this.context.lang.get}\r\n      />\r\n    );\r\n    return pageContent;\r\n  }\r\n}\r\nHome.contextType = globalContext;\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n  Header,\r\n  Dimmer,\r\n  Icon,\r\n  Progress,\r\n  Popup,\r\n  Accordion,\r\n} from \"semantic-ui-react\";\r\nimport { globalContext } from \"../siteContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport playlist from \"../../data/music-data.json\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./music-player.css\";\r\n\r\nclass MusicPlayer extends Component {\r\n  musicPlayerLabel = {\r\n    en: \"Music Player\",\r\n    cn: \"音乐播放器\",\r\n  };\r\n\r\n  playlistLabel = {\r\n    en: \"Playlist\",\r\n    cn: \"播放列表\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentSong: 0,\r\n      isPlaying: false,\r\n      progress: 0.0,\r\n      volume: 0.6,\r\n      activeIndex: 0,\r\n      showPlayer: 0,\r\n    };\r\n    this.registeredEvents = false;\r\n    this.currentlyPlaying = 0;\r\n    this.currentVolume = this.state.volume;\r\n    this.savedVolume = 0;\r\n  }\r\n  togglePlay() {\r\n    const player = this.refs.player;\r\n    if (!this.state.isPlaying) {\r\n      player.play();\r\n      this.setState({ isPlaying: true });\r\n    } else {\r\n      player.pause();\r\n      this.setState({ isPlaying: false });\r\n    }\r\n  }\r\n\r\n  playPreviousSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getPrevSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  playNextSong() {\r\n    const temp = this.state.currentSong;\r\n    const nextSong = this.getNextSong();\r\n    this.setState({ currentSong: nextSong }, () => {\r\n      if (temp !== this.state.currentSong) {\r\n        this.setState({ isPlaying: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  setProgress(evt) {\r\n    const progressBar = ReactDOM.findDOMNode(this.refs.songProgress);\r\n    const percentage =\r\n      (evt.clientX - progressBar.getBoundingClientRect().left) /\r\n      progressBar.clientWidth;\r\n    this.setState({ progress: percentage });\r\n    const player = this.refs.player;\r\n    player.currentTime = player.duration * percentage;\r\n  }\r\n\r\n  selectSong(index) {\r\n    this.setState({ currentSong: index });\r\n    this.setState({ isPlaying: true });\r\n  }\r\n\r\n  handleVolumeChange(value) {}\r\n\r\n  componentDidMount() {\r\n    this.refs.player.volume = this.state.volume;\r\n    try {\r\n      // this.refs.player.play();\r\n      // this.setState({ isPlaying: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  handlePlaylistClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  handleMusicPlayerAccordionClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { showPlayer } = this.state;\r\n    const newIndex = showPlayer === index ? -1 : index;\r\n\r\n    this.setState({ showPlayer: newIndex });\r\n  };\r\n\r\n  toggleMute() {\r\n    if (this.state.volume !== 0.0) {\r\n      this.savedVolume = this.state.volume;\r\n      this.setState({ volume: 0.0 });\r\n    } else {\r\n      this.setState({ volume: this.savedVolume });\r\n    }\r\n  }\r\n\r\n  getNextSong = () =>\r\n    this.state.currentSong === playlist.length - 1\r\n      ? 0\r\n      : this.state.currentSong + 1;\r\n\r\n  getPrevSong = () =>\r\n    this.state.currentSong === 0\r\n      ? playlist.length - 1\r\n      : this.state.currentSong - 1;\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const { showPlayer } = this.state;\r\n    const font =\r\n      this.context.lang.get === \"en\" ? \"JetBrains Mono\" : \"Noto Sans\";\r\n\r\n    const player = this.refs.player;\r\n    if (player) {\r\n      if (this.currentlyPlaying !== this.state.currentSong) {\r\n        this.currentlyPlaying = this.state.currentSong;\r\n        player.src = playlist[this.state.currentSong].path;\r\n        player.play();\r\n      }\r\n      if (this.currentVolume !== this.state.volume) {\r\n        this.currentVolume = this.state.volume;\r\n        player.volume = this.currentVolume;\r\n      }\r\n      if (!this.registeredEvents) {\r\n        this.registeredEvents = true;\r\n        player.addEventListener(\"timeupdate\", (evt) => {\r\n          this.setState({ progress: player.currentTime / player.duration });\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <audio ref=\"player\" onEnded={this.playNextSong.bind(this)}>\r\n          <source src={playlist[this.state.currentSong].path} />\r\n        </audio>\r\n        <Accordion\r\n          styled\r\n          style={{\r\n            fontFamily: \"JetBrains Mono\",\r\n            marginTop: \"1em\",\r\n          }}\r\n        >\r\n          <Accordion.Title\r\n            active={showPlayer === 0}\r\n            index={0}\r\n            as=\"h3\"\r\n            style={{ fontFamily: font }}\r\n            onClick={this.handleMusicPlayerAccordionClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            {this.musicPlayerLabel[this.context.lang.get]}\r\n          </Accordion.Title>\r\n\r\n          <Accordion.Content\r\n            active={showPlayer === 0}\r\n            style={{ paddingTop: 0 }}\r\n          >\r\n            <Segment raised color=\"blue\">\r\n              <Grid>\r\n                {/* Title of the song */}\r\n                <Grid.Row centered>\r\n                  <Header as=\"h4\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                    {playlist[this.state.currentSong].title}\r\n                  </Header>\r\n                </Grid.Row>\r\n                <Grid.Row centered style={{ padding: 0, margin: 0 }}>\r\n                  <Header as=\"h6\" style={{ fontFamily: \"JetBrains Mono\" }}>\r\n                    {playlist[this.state.currentSong].artist}\r\n                  </Header>\r\n                </Grid.Row>\r\n                {/* Progress bar */}\r\n                <Grid.Row\r\n                  columns=\"equal\"\r\n                  style={{ paddingBottom: 0, fontSize: \"12px\" }}\r\n                >\r\n                  <Grid.Column textAlign=\"center\">\r\n                    {this.refs.player &&\r\n                      readableDuration(this.refs.player.currentTime)}\r\n                  </Grid.Column>\r\n                  <Grid.Column width={9} textAlign=\"center\">\r\n                    <Progress\r\n                      ref=\"songProgress\"\r\n                      active\r\n                      color=\"blue\"\r\n                      size=\"small\"\r\n                      style={{ margin: 0 }}\r\n                      percent={this.state.progress * 100}\r\n                      onClick={this.setProgress.bind(this)}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column textAlign=\"center\">\r\n                    <span>\r\n                      {this.refs.player &&\r\n                        readableDuration(this.refs.player.duration)}\r\n                    </span>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {/* Controls */}\r\n                <Grid.Row centered style={{ paddingLeft: \"32%\" }}>\r\n                  <Grid.Column width={5}>\r\n                    <Grid>\r\n                      <Grid.Row columns=\"equal\" centered>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Popup\r\n                            content={playlist[this.getPrevSong()].title}\r\n                            position=\"bottom center\"\r\n                            trigger={\r\n                              <Button\r\n                                className=\"music-player-button\"\r\n                                icon=\"angle double left\"\r\n                                size=\"small\"\r\n                                onClick={this.playPreviousSong.bind(this)}\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Button\r\n                            ref=\"playButton\"\r\n                            className=\"music-player-button\"\r\n                            size=\"small\"\r\n                            icon={this.state.isPlaying ? \"pause\" : \"play\"}\r\n                            onClick={this.togglePlay.bind(this)}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column textAlign=\"center\">\r\n                          <Popup\r\n                            content={playlist[this.getNextSong()].title}\r\n                            position=\"bottom center\"\r\n                            trigger={\r\n                              <Button\r\n                                className=\"music-player-button\"\r\n                                icon=\"angle double right\"\r\n                                size=\"small\"\r\n                                onClick={this.playNextSong.bind(this)}\r\n                              />\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={8} style={{ paddingLeft: \"2em\" }}>\r\n                    <Grid>\r\n                      <Grid.Row columns=\"equal\" centered>\r\n                        <Grid.Column textAlign=\"center\" width={5}>\r\n                          <Button\r\n                            className=\"music-player-button\"\r\n                            size=\"small\"\r\n                            icon={\r\n                              this.state.volume === 0.0\r\n                                ? \"volume off\"\r\n                                : \"volume down\"\r\n                            }\r\n                            onClick={this.toggleMute.bind(this)}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8} textAlign=\"center\">\r\n                          <Slider\r\n                            className=\"custom-slider\"\r\n                            value={this.state.volume * 100}\r\n                            aria-labelledby=\"discrete-slider-small-steps\"\r\n                            step={20}\r\n                            marks\r\n                            min={0}\r\n                            max={100}\r\n                            style={{ marginTop: \"0.2em\" }}\r\n                            valueLabelDisplay=\"auto\"\r\n                            onChange={(e, val) =>\r\n                              this.setState({ volume: val / 100 })\r\n                            }\r\n                          />\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Segment>\r\n\r\n            {/* Playlist */}\r\n            <Accordion styled>\r\n              <Accordion.Title\r\n                active={activeIndex === 0}\r\n                index={0}\r\n                as=\"h3\"\r\n                onClick={this.handlePlaylistClick}\r\n                style={{ fontFamily: font, marginLeft: \"0.5em\" }}\r\n              >\r\n                <Icon name=\"dropdown\" />\r\n                {this.playlistLabel[this.context.lang.get]}\r\n              </Accordion.Title>\r\n              <Accordion.Content active={activeIndex === 0}>\r\n                <Grid\r\n                  divided\r\n                  style={{ fontFamily: \"JetBrains Mono\", fontSize: \"11px\" }}\r\n                >\r\n                  {playlist.map((song, index) => {\r\n                    const isSelected = index === this.state.currentSong;\r\n                    return (\r\n                      <div\r\n                        key={song.title + isSelected}\r\n                        onClick={this.selectSong.bind(this, index)}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          padding: \"0.5em 0.5em 0.5em 1em\",\r\n                        }}\r\n                      >\r\n                        <SongSelectionItem\r\n                          index={index}\r\n                          artist={song.artist}\r\n                          title={song.title}\r\n                          selected={isSelected}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              </Accordion.Content>\r\n            </Accordion>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass SongSelectionItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: props.index,\r\n      artist: props.artist,\r\n      title: props.title,\r\n      selected: props.selected,\r\n    };\r\n  }\r\n  handleMouseEnter = () => this.setState({ active: true });\r\n  handleMouseLeave = () => this.setState({ active: false });\r\n  render() {\r\n    const { active } = this.state;\r\n    return (\r\n      <Dimmer.Dimmable\r\n        as={Grid.Row}\r\n        dimmed={active}\r\n        className=\"song-selection\"\r\n        style={{ padding: \"5px 10px 5px 0.5em\", borderRadius: \"5px\" }}\r\n        onMouseEnter={this.handleMouseEnter}\r\n        onMouseLeave={this.handleMouseLeave}\r\n      >\r\n        <span>\r\n          {this.state.selected && <Icon name=\"play\" />} {this.state.index + 1}.{\" \"}\r\n          {this.state.artist} - {this.state.title}\r\n        </span>\r\n        <Dimmer active={active}>\r\n          <Icon name=\"play\" />\r\n          <span> {this.state.title}</span>\r\n        </Dimmer>\r\n      </Dimmer.Dimmable>\r\n    );\r\n  }\r\n}\r\n\r\nlet readableDuration = function (seconds) {\r\n  let sec = Math.floor(seconds);\r\n  let min = Math.floor(sec / 60);\r\n  min = min >= 10 ? min : \"0\" + min;\r\n  sec = Math.floor(sec % 60);\r\n  sec = sec >= 10 ? sec : \"0\" + sec;\r\n  return min + \":\" + sec;\r\n};\r\n\r\nMusicPlayer.contextType = globalContext;\r\nexport default MusicPlayer;\r\n","import React, { Component, createRef } from \"react\";\r\nimport \"./App.css\";\r\nimport NavigationMenu from \"./components/sidebar\";\r\nimport Blog from \"./pages/blog\";\r\nimport Projects from \"./pages/projects\";\r\nimport Home from \"./pages/home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, Segment, Ref, Rail, Sticky } from \"semantic-ui-react\";\r\nimport { globalContext } from \"./components/siteContext\";\r\nimport MarkdownSection from \"./components/markdownSection\";\r\nimport postData from \"./data/post-data.json\";\r\nimport MusicPlayer from \"./components/musicPlayer/musicPlayer\";\r\n\r\nclass App extends Component {\r\n  contextRef = createRef();\r\n  render() {\r\n    const lang = this.context.lang.get;\r\n\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n          <Ref innerRef={this.contextRef}>\r\n            <Grid\r\n              style={{\r\n                width: \"100%\",\r\n                marginTop: \"0em\",\r\n              }}\r\n            >\r\n              <Grid.Column width={3}>\r\n                <Rail internal position=\"left\">\r\n                  <Sticky context={this.contextRef}>\r\n                    <NavigationMenu />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n              <Grid.Column stretched width={9} style={{ height: \"100%\" }}>\r\n                <Segment style={{ padding: \"1.5em\", overflow: \"auto\" }}>\r\n                  <Switch>\r\n                    <Route path=\"/siyuans-hub/\" exact component={Home} />\r\n                    <Route path=\"/siyuans-hub/blog\" exact component={Blog} />\r\n                    <Route\r\n                      path=\"/siyuans-hub/projects\"\r\n                      exact\r\n                      component={Projects}\r\n                    />\r\n                    {/* Posts */}\r\n                    {postData.map((post) => {\r\n                      return (\r\n                        <Route\r\n                          key={post.title[lang]}\r\n                          exact\r\n                          path={`/siyuans-hub/blog/${post.id}`}\r\n                        >\r\n                          <MarkdownSection\r\n                            filePath={post.path[lang]}\r\n                            lang={lang}\r\n                          />\r\n                        </Route>\r\n                      );\r\n                    })}\r\n                  </Switch>\r\n                </Segment>\r\n              </Grid.Column>\r\n              {/*\r\n              Music Player\r\n            */}\r\n              <Grid.Column width={4}>\r\n                <Rail internal position=\"right\" style={{ width: \"100%\" }}>\r\n                  <Sticky context={this.contextRef}>\r\n                    <MusicPlayer />\r\n                  </Sticky>\r\n                </Rail>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Ref>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nApp.contextType = globalContext;\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport GlobalContextProvider from \"./components/siteContext\";\nimport figlet from \"figlet\";\nimport standard from \"figlet/importable-fonts/Standard.js\";\n\n/* Easter Egg */\nfiglet.parseFont(\"Standard\", standard);\nfiglet.text(\n  \"Welcome to\\nSiyuan's Hub\",\n  {\n    font: \"Standard\",\n  },\n  function (_, data) {\n    console.log(data);\n  }\n);\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <App />\n  </GlobalContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}